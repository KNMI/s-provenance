{
  "definitions": {}, 
  "description": "S-ProvFlow provenance API - Provenance framework for storage and access of data-intensive streaming lineage. It offers a a web API and a range of dedicated visualisation tools and a provenance model (S-PROV) which utilises and extends PROV and ProvONE model", 
  "info": {
    "title": "s-prov", 
    "version": "v1"
  }, 
  "parameters": {}, 
  "paths": {
    "/data": {
      "get": {
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "format": {
                  "type": "string"
                }, 
                "implementations": {
                  "type": "string"
                }, 
                "limit": {
                  "format": "int32", 
                  "type": "integer"
                }, 
                "maxvalues": {
                  "type": "string"
                }, 
                "minvalues": {
                  "type": "string"
                }, 
                "mode": {
                  "type": "string"
                }, 
                "rformat": {
                  "default": "json", 
                  "type": "string"
                }, 
                "start": {
                  "format": "int32", 
                  "type": "integer"
                }, 
                "terms": {
                  "type": "string"
                }, 
                "types": {
                  "type": "string"
                }, 
                "usernames": {
                  "type": "string"
                }, 
                "wasAssociatedWith": {
                  "type": "string"
                }, 
                "wasAttributedTo": {
                  "type": "string"
                }, 
                "wasGeneratedBy": {
                  "type": "string"
                }
              }, 
              "required": [
                "limit", 
                "start"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {}
      }, 
      "options": {
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "format": {
                  "type": "string"
                }, 
                "implementations": {
                  "type": "string"
                }, 
                "limit": {
                  "format": "int32", 
                  "type": "integer"
                }, 
                "maxvalues": {
                  "type": "string"
                }, 
                "minvalues": {
                  "type": "string"
                }, 
                "mode": {
                  "type": "string"
                }, 
                "rformat": {
                  "default": "json", 
                  "type": "string"
                }, 
                "start": {
                  "format": "int32", 
                  "type": "integer"
                }, 
                "terms": {
                  "type": "string"
                }, 
                "types": {
                  "type": "string"
                }, 
                "usernames": {
                  "type": "string"
                }, 
                "wasAssociatedWith": {
                  "type": "string"
                }, 
                "wasAttributedTo": {
                  "type": "string"
                }, 
                "wasGeneratedBy": {
                  "type": "string"
                }
              }, 
              "required": [
                "limit", 
                "start"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {}
      }
    }, 
    "/data/filterOnAncestor": {
      "options": {
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "format": {
                  "type": "string"
                }, 
                "ids": {
                  "type": "string"
                }, 
                "implementations": {
                  "type": "string"
                }, 
                "level": {
                  "type": "string"
                }, 
                "maxvalues": {
                  "type": "string"
                }, 
                "minvalues": {
                  "type": "string"
                }, 
                "mode": {
                  "type": "string"
                }, 
                "rformat": {
                  "default": "json", 
                  "type": "string"
                }, 
                "terms": {
                  "type": "string"
                }, 
                "types": {
                  "type": "string"
                }, 
                "usernames": {
                  "type": "string"
                }, 
                "wasAssociatedWith": {
                  "type": "string"
                }
              }, 
              "required": [
                "level"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {}
      }, 
      "post": {
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "format": {
                  "type": "string"
                }, 
                "ids": {
                  "type": "string"
                }, 
                "implementations": {
                  "type": "string"
                }, 
                "level": {
                  "type": "string"
                }, 
                "maxvalues": {
                  "type": "string"
                }, 
                "minvalues": {
                  "type": "string"
                }, 
                "mode": {
                  "type": "string"
                }, 
                "rformat": {
                  "default": "json", 
                  "type": "string"
                }, 
                "terms": {
                  "type": "string"
                }, 
                "types": {
                  "type": "string"
                }, 
                "usernames": {
                  "type": "string"
                }, 
                "wasAssociatedWith": {
                  "type": "string"
                }
              }, 
              "required": [
                "level"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {}
      }
    }, 
    "/data/{data_id}": {
      "get": {
        "parameters": [
          {
            "in": "path", 
            "name": "data_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}
      }, 
      "options": {
        "parameters": [
          {
            "in": "path", 
            "name": "data_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}
      }
    }, 
    "/data/{data_id}/derivedData": {
      "get": {
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "level": {
                  "type": "string"
                }
              }, 
              "required": [
                "level"
              ], 
              "type": "object"
            }
          }, 
          {
            "in": "path", 
            "name": "data_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}
      }, 
      "options": {
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "level": {
                  "type": "string"
                }
              }, 
              "required": [
                "level"
              ], 
              "type": "object"
            }
          }, 
          {
            "in": "path", 
            "name": "data_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}
      }
    }, 
    "/data/{data_id}/export": {
      "get": {
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "format": {
                  "type": "string"
                }, 
                "level": {
                  "type": "string"
                }
              }, 
              "required": [
                "level"
              ], 
              "type": "object"
            }
          }, 
          {
            "in": "path", 
            "name": "data_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}
      }, 
      "options": {
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "format": {
                  "type": "string"
                }, 
                "level": {
                  "type": "string"
                }
              }, 
              "required": [
                "level"
              ], 
              "type": "object"
            }
          }, 
          {
            "in": "path", 
            "name": "data_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}
      }
    }, 
    "/data/{data_id}/wasDerivedFrom": {
      "get": {
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "level": {
                  "type": "string"
                }
              }, 
              "required": [
                "level"
              ], 
              "type": "object"
            }
          }, 
          {
            "in": "path", 
            "name": "data_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}
      }, 
      "options": {
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "level": {
                  "type": "string"
                }
              }, 
              "required": [
                "level"
              ], 
              "type": "object"
            }
          }, 
          {
            "in": "path", 
            "name": "data_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}
      }
    }, 
    "/instances/{instid}": {
      "get": {
        "description": "Extract details about a single instance or component by specifying its id. The returning document will indicate the changes that occurred, reporting the first invocation affected. It support the specification of a list of runIds the instance was wasAssociateFor, considering that the same instance could be used across multiple runs", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "limit": {
                  "format": "int32", 
                  "type": "integer"
                }, 
                "start": {
                  "format": "int32", 
                  "type": "integer"
                }, 
                "wasAssociateFor": {
                  "type": "string"
                }
              }, 
              "required": [
                "limit", 
                "start"
              ], 
              "type": "object"
            }
          }, 
          {
            "in": "path", 
            "name": "instid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}, 
        "tags": [
          "lineage"
        ]
      }, 
      "options": {
        "description": "Extract details about a single instance or component by specifying its id. The returning document will indicate the changes that occurred, reporting the first invocation affected. It support the specification of a list of runIds the instance was wasAssociateFor, considering that the same instance could be used across multiple runs", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "limit": {
                  "format": "int32", 
                  "type": "integer"
                }, 
                "start": {
                  "format": "int32", 
                  "type": "integer"
                }, 
                "wasAssociateFor": {
                  "type": "string"
                }
              }, 
              "required": [
                "limit", 
                "start"
              ], 
              "type": "object"
            }
          }, 
          {
            "in": "path", 
            "name": "instid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}, 
        "tags": [
          "lineage"
        ]
      }
    }, 
    "/invocations/{invocid}": {
      "get": {
        "description": "Extract details about a single invocation by specifying its id", 
        "parameters": [
          {
            "in": "path", 
            "name": "invocid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}, 
        "tags": [
          "lineage"
        ]
      }, 
      "options": {
        "description": "Extract details about a single invocation by specifying its id", 
        "parameters": [
          {
            "in": "path", 
            "name": "invocid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}, 
        "tags": [
          "lineage"
        ]
      }
    }, 
    "/summaries/collaborative": {
      "get": {
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "format": {
                  "type": "string"
                }, 
                "groupby": {
                  "type": "string"
                }, 
                "implementations": {
                  "type": "string"
                }, 
                "level": {
                  "type": "string"
                }, 
                "maxvalues": {
                  "type": "string"
                }, 
                "minvalues": {
                  "type": "string"
                }, 
                "mode": {
                  "type": "string"
                }, 
                "rformat": {
                  "default": "json", 
                  "type": "string"
                }, 
                "terms": {
                  "type": "string"
                }, 
                "types": {
                  "type": "string"
                }, 
                "usernames": {
                  "type": "string"
                }, 
                "wasAssociatedWith": {
                  "type": "string"
                }
              }, 
              "required": [
                "level"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {}
      }, 
      "options": {
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "format": {
                  "type": "string"
                }, 
                "groupby": {
                  "type": "string"
                }, 
                "implementations": {
                  "type": "string"
                }, 
                "level": {
                  "type": "string"
                }, 
                "maxvalues": {
                  "type": "string"
                }, 
                "minvalues": {
                  "type": "string"
                }, 
                "mode": {
                  "type": "string"
                }, 
                "rformat": {
                  "default": "json", 
                  "type": "string"
                }, 
                "terms": {
                  "type": "string"
                }, 
                "types": {
                  "type": "string"
                }, 
                "usernames": {
                  "type": "string"
                }, 
                "wasAssociatedWith": {
                  "type": "string"
                }
              }, 
              "required": [
                "level"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {}
      }
    }, 
    "/summaries/workflowexecution": {
      "get": {
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "clusters": {
                  "type": "string"
                }, 
                "groupby": {
                  "type": "string"
                }, 
                "level": {
                  "type": "string"
                }, 
                "maxidx": {
                  "format": "int32", 
                  "type": "integer"
                }, 
                "maxtme": {
                  "type": "string"
                }, 
                "minidx": {
                  "format": "int32", 
                  "type": "integer"
                }, 
                "mintime": {
                  "type": "string"
                }, 
                "runId": {
                  "type": "string"
                }
              }, 
              "required": [
                "level", 
                "maxidx", 
                "minidx"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {}
      }, 
      "options": {
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "clusters": {
                  "type": "string"
                }, 
                "groupby": {
                  "type": "string"
                }, 
                "level": {
                  "type": "string"
                }, 
                "maxidx": {
                  "format": "int32", 
                  "type": "integer"
                }, 
                "maxtme": {
                  "type": "string"
                }, 
                "minidx": {
                  "format": "int32", 
                  "type": "integer"
                }, 
                "mintime": {
                  "type": "string"
                }, 
                "runId": {
                  "type": "string"
                }
              }, 
              "required": [
                "level", 
                "maxidx", 
                "minidx"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {}
      }
    }, 
    "/terms": {
      "get": {
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "aggregationLevel": {
                  "type": "string"
                }, 
                "runIds": {
                  "type": "string"
                }, 
                "usernames": {
                  "type": "string"
                }
              }, 
              "type": "object"
            }
          }
        ], 
        "responses": {}
      }, 
      "options": {
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "aggregationLevel": {
                  "type": "string"
                }, 
                "runIds": {
                  "type": "string"
                }, 
                "usernames": {
                  "type": "string"
                }
              }, 
              "type": "object"
            }
          }
        ], 
        "responses": {}
      }
    }, 
    "/workflowexecutions": {
      "get": {
        "description": "Extract documents from the bundle collection according to a query string which may include usernames, type of the workflow, the components the run wasAssociatedWith and their implementations. Data results' metadata and parameters can also be queried by specifying the terms and their min and max values-ranges and data formats. Mode of the search can also be indicated (mode ::= (OR j AND). It will apply to the search upon metadata and parameters values of each run", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "format": {
                  "type": "string"
                }, 
                "implementations": {
                  "type": "string"
                }, 
                "limit": {
                  "format": "int32", 
                  "type": "integer"
                }, 
                "maxvalues": {
                  "type": "string"
                }, 
                "minvalues": {
                  "type": "string"
                }, 
                "mode": {
                  "type": "string"
                }, 
                "rformat": {
                  "default": "json", 
                  "type": "string"
                }, 
                "start": {
                  "format": "int32", 
                  "type": "integer"
                }, 
                "terms": {
                  "type": "string"
                }, 
                "types": {
                  "type": "string"
                }, 
                "usernames": {
                  "type": "string"
                }, 
                "wasAssociatedWith": {
                  "type": "string"
                }
              }, 
              "required": [
                "limit", 
                "start"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {}, 
        "tags": [
          "discovery"
        ]
      }, 
      "options": {
        "description": "Extract documents from the bundle collection according to a query string which may include usernames, type of the workflow, the components the run wasAssociatedWith and their implementations. Data results' metadata and parameters can also be queried by specifying the terms and their min and max values-ranges and data formats. Mode of the search can also be indicated (mode ::= (OR j AND). It will apply to the search upon metadata and parameters values of each run", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "format": {
                  "type": "string"
                }, 
                "implementations": {
                  "type": "string"
                }, 
                "limit": {
                  "format": "int32", 
                  "type": "integer"
                }, 
                "maxvalues": {
                  "type": "string"
                }, 
                "minvalues": {
                  "type": "string"
                }, 
                "mode": {
                  "type": "string"
                }, 
                "rformat": {
                  "default": "json", 
                  "type": "string"
                }, 
                "start": {
                  "format": "int32", 
                  "type": "integer"
                }, 
                "terms": {
                  "type": "string"
                }, 
                "types": {
                  "type": "string"
                }, 
                "usernames": {
                  "type": "string"
                }, 
                "wasAssociatedWith": {
                  "type": "string"
                }
              }, 
              "required": [
                "limit", 
                "start"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {}, 
        "tags": [
          "discovery"
        ]
      }
    }, 
    "/workflowexecutions/insert": {
      "options": {
        "description": "Bulk insert of bundle or lineage documents in JSON format. These must be provided as encoded stirng in a POST request", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "prov": {
                  "type": "string"
                }
              }, 
              "type": "object"
            }
          }
        ], 
        "responses": {}, 
        "tags": [
          "acquisition"
        ]
      }, 
      "post": {
        "description": "Bulk insert of bundle or lineage documents in JSON format. These must be provided as encoded stirng in a POST request", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "prov": {
                  "type": "string"
                }
              }, 
              "type": "object"
            }
          }
        ], 
        "responses": {}, 
        "tags": [
          "acquisition"
        ]
      }
    }, 
    "/workflowexecutions/{run_id}/export": {
      "get": {
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "format": {
                  "type": "string"
                }
              }, 
              "type": "object"
            }
          }, 
          {
            "in": "path", 
            "name": "run_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}
      }, 
      "options": {
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "format": {
                  "type": "string"
                }
              }, 
              "type": "object"
            }
          }, 
          {
            "in": "path", 
            "name": "run_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}
      }
    }, 
    "/workflowexecutions/{runid}": {
      "delete": {
        "description": "Extract documents from the bundle collection by the runid of a WFExecution. The method will return input data and infomation about the components and the libraries used for the specific run", 
        "parameters": [
          {
            "in": "path", 
            "name": "runid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}, 
        "tags": [
          "discovery"
        ]
      }, 
      "get": {
        "description": "Extract documents from the bundle collection by the runid of a WFExecution. The method will return input data and infomation about the components and the libraries used for the specific run", 
        "parameters": [
          {
            "in": "path", 
            "name": "runid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}, 
        "tags": [
          "discovery"
        ]
      }, 
      "options": {
        "description": "Extract documents from the bundle collection by the runid of a WFExecution. The method will return input data and infomation about the components and the libraries used for the specific run", 
        "parameters": [
          {
            "in": "path", 
            "name": "runid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}, 
        "tags": [
          "discovery"
        ]
      }
    }, 
    "/workflowexecutions/{runid}/delete": {
      "options": {
        "description": "Delete a workflow execution trace, including its bundle and all its lineage documents", 
        "parameters": [
          {
            "in": "path", 
            "name": "runid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}, 
        "tags": [
          "acquisition"
        ]
      }, 
      "post": {
        "description": "Delete a workflow execution trace, including its bundle and all its lineage documents", 
        "parameters": [
          {
            "in": "path", 
            "name": "runid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}, 
        "tags": [
          "acquisition"
        ]
      }
    }, 
    "/workflowexecutions/{runid}/edit": {
      "options": {
        "description": "Update of the description of a workflow execution. Users can improve this information in free-tex", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "doc": {
                  "type": "string"
                }
              }, 
              "required": [
                "doc"
              ], 
              "type": "object"
            }
          }, 
          {
            "in": "path", 
            "name": "runid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}, 
        "tags": [
          "acquisition"
        ]
      }, 
      "post": {
        "description": "Update of the description of a workflow execution. Users can improve this information in free-tex", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "doc": {
                  "type": "string"
                }
              }, 
              "required": [
                "doc"
              ], 
              "type": "object"
            }
          }, 
          {
            "in": "path", 
            "name": "runid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}, 
        "tags": [
          "acquisition"
        ]
      }
    }, 
    "/workflowexecutions/{runid}/showactivity": {
      "get": {
        "description": "Extract detailed information related to the activity related to a WFExecution (id). The result-set can be grouped by invocations, instances or components (parameter level) and shows progress, anomalies (such as exceptions or systems' and users messages), occurrence of changes and the rapid availability of accessible data bearing intermediate results. This method can also be used for runtime monitoring", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "level": {
                  "type": "string"
                }, 
                "limit": {
                  "format": "int32", 
                  "type": "integer"
                }, 
                "start": {
                  "format": "int32", 
                  "type": "integer"
                }
              }, 
              "required": [
                "limit", 
                "start"
              ], 
              "type": "object"
            }
          }, 
          {
            "in": "path", 
            "name": "runid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}, 
        "tags": [
          "monitor"
        ]
      }, 
      "options": {
        "description": "Extract detailed information related to the activity related to a WFExecution (id). The result-set can be grouped by invocations, instances or components (parameter level) and shows progress, anomalies (such as exceptions or systems' and users messages), occurrence of changes and the rapid availability of accessible data bearing intermediate results. This method can also be used for runtime monitoring", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "properties": {
                "level": {
                  "type": "string"
                }, 
                "limit": {
                  "format": "int32", 
                  "type": "integer"
                }, 
                "start": {
                  "format": "int32", 
                  "type": "integer"
                }
              }, 
              "required": [
                "limit", 
                "start"
              ], 
              "type": "object"
            }
          }, 
          {
            "in": "path", 
            "name": "runid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {}, 
        "tags": [
          "monitor"
        ]
      }
    }
  }, 
  "swagger": "2.0", 
  "tags": []
}
